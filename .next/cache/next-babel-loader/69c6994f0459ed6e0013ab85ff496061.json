{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stefka1210/theLab/nextOne/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\nvar TeamList = styled.div.withConfig({\n  displayName: \"pages__TeamList\",\n  componentId: \"sc-1h0jejb-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(240px,1fr));gap:30px;\"]);\nvar Team = styled.div.withConfig({\n  displayName: \"pages__Team\",\n  componentId: \"sc-1h0jejb-1\"\n})([\"display:flex;align-items:center;justify-content:center;width:240px;height:240px;display:block;background:#cccccc;\"]);\nvar ATag = styled.a.withConfig({\n  displayName: \"pages__ATag\",\n  componentId: \"sc-1h0jejb-2\"\n})([\"font-weight:700;text-align:center;padding:8px;text-transform:uppercase;cursor:pointer;&:hover{background:#414141;color:white;}\"]);\nvar TeamId = styled.div.withConfig({\n  displayName: \"pages__TeamId\",\n  componentId: \"sc-1h0jejb-3\"\n})([\"font-size:1rem;\"]);\nvar LocName = styled.div.withConfig({\n  displayName: \"pages__LocName\",\n  componentId: \"sc-1h0jejb-4\"\n})([\"font-size:14px;\"]);\nvar NickName = styled.div.withConfig({\n  displayName: \"pages__NickName\",\n  componentId: \"sc-1h0jejb-5\"\n})([\"font-size:20px;\"]);\n\nvar Index = function Index(props) {\n  console.log(props);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"NHL Teams\"), __jsx(TeamList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.teams.map(function (team) {\n    return __jsx(Team, {\n      key: team.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(team.teamName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(ATag, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(TeamId, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, team.id), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(LocName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, team.locationName), __jsx(NickName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, team.teamName)))));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://statsapi.web.nhl.com/api/v1/teams'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"team data fetched. Count: \".concat(data.teams));\n          return _context.abrupt(\"return\", {\n            teams: data.teams\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/index.js"],"names":["Layout","Link","fetch","styled","TeamList","div","Team","ATag","a","TeamId","LocName","NickName","Index","props","console","log","teams","map","team","name","teamName","id","locationName","getInitialProps","res","json","data"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,uFAAd;AAKA,IAAMC,IAAI,GAAGH,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,yHAAV;AASA,IAAME,IAAI,GAAGJ,MAAM,CAACK,CAAV;AAAA;AAAA;AAAA,sIAAV;AAYA,IAAMC,MAAM,GAAGN,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,uBAAZ;AAGA,IAAMK,OAAO,GAAGP,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,uBAAb;AAGA,IAAMM,QAAQ,GAAGR,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,uBAAd;;AAIA,IAAMO,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACE,QAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASF,IAAI,CAACG,EAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUH,IAAI,CAACI,YAAf,CADJ,EAEI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWJ,IAAI,CAACE,QAAhB,CAFJ,CAFJ,CADJ,CADJ,CADiB;AAAA,GAApB,CADL,CAFJ,CADJ;AAoBH,CAvBD;;AAwBAR,KAAK,CAACW,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFrB,KAAK,CAAC,2CAAD,CAFH;;AAAA;AAEdsB,UAAAA,GAFc;AAAA;AAAA,2CAGDA,GAAG,CAACC,IAAJ,EAHC;;AAAA;AAGdC,UAAAA,IAHc;AAKpBZ,UAAAA,OAAO,CAACC,GAAR,qCAAyCW,IAAI,CAACV,KAA9C;AALoB,2CAOb;AACHA,YAAAA,KAAK,EAAEU,IAAI,CAACV;AADT,WAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\n\nconst TeamList = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n    gap: 30px;\n`;\nconst Team = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 240px;\n    height: 240px;\n    display: block;\n    background: #cccccc;\n`;\nconst ATag = styled.a`\n    font-weight: 700;\n    text-align: center;\n    padding: 8px;\n    text-transform: uppercase;\n    cursor: pointer;\n    /* background: white; */\n    &:hover {\n        background: #414141;\n        color: white;\n    }\n`;\nconst TeamId = styled.div`\n    font-size: 1rem;\n`;\nconst LocName = styled.div`\n    font-size: 14px;\n`;\nconst NickName = styled.div`\n    font-size: 20px;\n`;\n\nconst Index = props => {\n    console.log(props);\n\n    return (\n        <Layout>\n            <h1>NHL Teams</h1>\n            <TeamList>\n                {props.teams.map(team => (\n                    <Team key={team.name}>\n                        <Link href=\"/p/[id]\" as={`/p/${team.teamName}`}>\n                            <ATag>\n                                <TeamId>{team.id}</TeamId>\n                                <div>\n                                    <LocName>{team.locationName}</LocName>\n                                    <NickName>{team.teamName}</NickName>\n                                </div>\n                            </ATag>\n                        </Link>\n                    </Team>\n                ))}\n            </TeamList>\n        </Layout>\n    );\n};\nIndex.getInitialProps = async function() {\n    // const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const res = await fetch('https://statsapi.web.nhl.com/api/v1/teams');\n    const data = await res.json();\n\n    console.log(`team data fetched. Count: ${data.teams}`);\n\n    return {\n        teams: data.teams\n    };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}