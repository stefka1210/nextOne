{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/Users/stefka1210/theLab/nextOne/pages/schedules.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Link from 'next/link';\nimport styled from 'styled-components'; // import fetch from 'isomorphic-unfetch';\n// const SeasonSchedules = [\n//     {id: 2019020001, est: '20191002 19:00:00', a: 'OTT', h: 'TOR'},\n//     {id: 2019020002, est: '20191002 20:00:00', a: 'WSH', h: 'STL'},\n//     {id: 2019020003, est: '20191002 22:00:00', a: 'VAN', h: 'EDM'},\n//     {id: 2019020034, est: '20191007 19:00:00', a: 'STL', h: 'TOR'},\n//     {id: 2019020035, est: '20191007 19:00:00', a: 'BUF', h: 'CBJ'},\n//     {id: 2019020036, est: '20191008 19:00:00', a: 'CAR', h: 'FLA'}\n// ];\n\nvar MatchList = styled.div.withConfig({\n  displayName: \"schedules__MatchList\",\n  componentId: \"sc-1f0vohs-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(400px,1fr));gap:20px;\"]);\nvar Match = styled.div.withConfig({\n  displayName: \"schedules__Match\",\n  componentId: \"sc-1f0vohs-1\"\n})([\"background:#ccc;height:240px;display:flex;align-items:center;justify-content:center;cursor:pointer;&:hover{background:#414141;color:white;}\"]);\nvar ATag = styled.a.withConfig({\n  displayName: \"schedules__ATag\",\n  componentId: \"sc-1f0vohs-2\"\n})([\"display:flex;align-items:center;text-transform:none;\"]);\nvar TeamName = styled.div.withConfig({\n  displayName: \"schedules__TeamName\",\n  componentId: \"sc-1f0vohs-3\"\n})([\"font-size:2rem;font-weight:700;\"]);\nvar Meta = styled.div.withConfig({\n  displayName: \"schedules__Meta\",\n  componentId: \"sc-1f0vohs-4\"\n})([\"display:flex;font-size:1rem;padding:0px 30px;align-items:center;\"]);\n\nvar Schedules = function Schedules(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"NHL Schedules\"), __jsx(MatchList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.matches.map(function (match) {\n    return __jsx(Match, {\n      key: match.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/match/[id]\",\n      as: \"/match/\".concat(match.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(ATag, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(TeamName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, match.a), __jsx(Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"@\"), __jsx(TeamName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, match.h))));\n  })));\n};\n\nSchedules.getInitialProps = function _callee() {\n  var data, date, searchDate, matchesOnDate;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          data = SeasonSchedules; // const searchDate = '20200212';\n\n          date = new Date().toISOString();\n          searchDate = date.substr(0, date.length - 14).replace(/\\-/g, '');\n          matchesOnDate = _Object$values(data).filter(function (entry) {\n            return entry.est.indexOf(searchDate) > -1;\n          }); // console.log('matchesOnDate:' + matchesOnDate[0].a);\n\n          return _context.abrupt(\"return\", {\n            matches: matchesOnDate\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Schedules;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/schedules.js"],"names":["Layout","SeasonSchedules","Link","styled","MatchList","div","Match","ATag","a","TeamName","Meta","Schedules","props","matches","map","match","id","h","getInitialProps","data","date","Date","toISOString","searchDate","substr","length","replace","matchesOnDate","filter","entry","est","indexOf"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,uFAAf;AAMA,IAAMC,KAAK,GAAGH,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,mJAAX;AAcA,IAAME,IAAI,GAAGJ,MAAM,CAACK,CAAV;AAAA;AAAA;AAAA,4DAAV;AAKA,IAAMC,QAAQ,GAAGN,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,uCAAd;AAIA,IAAMK,IAAI,GAAGP,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,wEAAV;;AAOA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACvB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,UAAAC,KAAK;AAAA,WACpB,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYD,KAAK,CAACC,EAAlB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWD,KAAK,CAACP,CAAjB,CADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAGI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWO,KAAK,CAACE,CAAjB,CAHJ,CADJ,CADJ,CADoB;AAAA,GAAvB,CADL,CAFJ,CADJ;AAkBH,CAnBD;;AAoBAN,SAAS,CAACO,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,IADkB,GACXlB,eADW,EAExB;;AAEMmB,UAAAA,IAJkB,GAIX,IAAIC,IAAJ,GAAWC,WAAX,EAJW;AAKlBC,UAAAA,UALkB,GAKLH,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeJ,IAAI,CAACK,MAAL,GAAc,EAA7B,EAAiCC,OAAjC,CAAyC,KAAzC,EAAgD,EAAhD,CALK;AAOlBC,UAAAA,aAPkB,GAOF,eAAcR,IAAd,EAAoBS,MAApB,CAA2B,UAASC,KAAT,EAAgB;AAC7D,mBAAOA,KAAK,CAACC,GAAN,CAAUC,OAAV,CAAkBR,UAAlB,IAAgC,CAAC,CAAxC;AACH,WAFqB,CAPE,EAWxB;;AAXwB,2CAajB;AACHV,YAAAA,OAAO,EAAEc;AADN,WAbiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAiBA,eAAehB,SAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n// import fetch from 'isomorphic-unfetch';\n\n// const SeasonSchedules = [\n//     {id: 2019020001, est: '20191002 19:00:00', a: 'OTT', h: 'TOR'},\n//     {id: 2019020002, est: '20191002 20:00:00', a: 'WSH', h: 'STL'},\n//     {id: 2019020003, est: '20191002 22:00:00', a: 'VAN', h: 'EDM'},\n//     {id: 2019020034, est: '20191007 19:00:00', a: 'STL', h: 'TOR'},\n//     {id: 2019020035, est: '20191007 19:00:00', a: 'BUF', h: 'CBJ'},\n//     {id: 2019020036, est: '20191008 19:00:00', a: 'CAR', h: 'FLA'}\n// ];\n\nconst MatchList = styled.div`\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); */\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n    gap: 20px;\n`;\nconst Match = styled.div`\n    /* width: 400px; */\n    background: #ccc;\n\n    height: 240px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    &:hover {\n        background: #414141;\n        color: white;\n    }\n`;\nconst ATag = styled.a`\n    display: flex;\n    align-items: center;\n    text-transform: none;\n`;\nconst TeamName = styled.div`\n    font-size: 2rem;\n    font-weight: 700;\n`;\nconst Meta = styled.div`\n    display: flex;\n    font-size: 1rem;\n    padding: 0px 30px;\n    align-items: center;\n`;\n\nconst Schedules = props => {\n    return (\n        <Layout>\n            <h1>NHL Schedules</h1>\n            <MatchList>\n                {props.matches.map(match => (\n                    <Match key={match.id}>\n                        <Link href=\"/match/[id]\" as={`/match/${match.id}`}>\n                            <ATag>\n                                <TeamName>{match.a}</TeamName>\n                                <Meta>@</Meta>\n                                <TeamName>{match.h}</TeamName>\n                            </ATag>\n                        </Link>\n                    </Match>\n                ))}\n            </MatchList>\n        </Layout>\n    );\n};\nSchedules.getInitialProps = async function() {\n    const data = SeasonSchedules;\n    // const searchDate = '20200212';\n\n    const date = new Date().toISOString();\n    const searchDate = date.substr(0, date.length - 14).replace(/\\-/g, '');\n\n    const matchesOnDate = Object.values(data).filter(function(entry) {\n        return entry.est.indexOf(searchDate) > -1;\n    });\n\n    // console.log('matchesOnDate:' + matchesOnDate[0].a);\n\n    return {\n        matches: matchesOnDate\n    };\n};\nexport default Schedules;\n"]},"metadata":{},"sourceType":"module"}