{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stefka1210/theLab/nextOne/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"NHL teams\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.teams.map(function (team) {\n    return (// <li key={team}>\n      //     <Link href=\"/p/[id]\" as={`/p/${team}`}>\n      //         <a>{team}</a>\n      //     </Link>\n      // </li>\n      console.log(team)\n    );\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://statsapi.web.nhl.com/api/v1/teams'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res);\n\n        case 5:\n          data = _context.sent;\n          console.log(\"team data fetched. Count: \".concat(typeof data.teams));\n          return _context.abrupt(\"return\", {\n            teams: data.teams.map(function (entry) {\n              return entry.team;\n            }) // teams: data.length\n\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/index.js"],"names":["Layout","Link","fetch","Index","props","teams","map","team","console","log","getInitialProps","res","data","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AANiB;AAAA,GAApB,CADL,CAFJ,CADe;AAAA,CAAnB;;AAgBAJ,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFR,KAAK,CAAC,2CAAD,CAFH;;AAAA;AAEdS,UAAAA,GAFc;AAAA;AAAA,2CAGDA,GAHC;;AAAA;AAGdC,UAAAA,IAHc;AAKpBJ,UAAAA,OAAO,CAACC,GAAR,qCAAyC,OAAOG,IAAI,CAACP,KAArD;AALoB,2CAOb;AACHA,YAAAA,KAAK,EAAEO,IAAI,CAACP,KAAL,CAAWC,GAAX,CAAe,UAAAO,KAAK;AAAA,qBAAIA,KAAK,CAACN,IAAV;AAAA,aAApB,CADJ,CAEH;;AAFG,WAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAYA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n    <Layout>\n        <h1>NHL teams</h1>\n        <ul>\n            {props.teams.map(team =>\n                // <li key={team}>\n                //     <Link href=\"/p/[id]\" as={`/p/${team}`}>\n                //         <a>{team}</a>\n                //     </Link>\n                // </li>\n                console.log(team)\n            )}\n        </ul>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n    // const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const res = await fetch('https://statsapi.web.nhl.com/api/v1/teams');\n    const data = await res;\n\n    console.log(`team data fetched. Count: ${typeof data.teams}`);\n\n    return {\n        teams: data.teams.map(entry => entry.team)\n        // teams: data.length\n    };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}