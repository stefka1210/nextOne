{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stefka1210/theLab/nextOne/pages/schedules.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Schedules = function Schedules(props) {\n  console.log('Hier Props >>>>>>', props);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"NHL Schedules\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.matches.map(function (match) {\n    return __jsx(\"li\", {\n      key: match.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(match.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, match.a), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, match.h))));\n  })));\n};\n\nSchedules.getInitialProps = function _callee() {\n  var res, data, searchDate, matchesOnDate;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(import(\"\".concat(SeasonSchedules)));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          searchDate = '20200204';\n          matchesOnDate = data.filter(function (entry) {\n            return entry.est.indexOf(searchDate) > -1;\n          });\n          console.log('matchesToday::::', matchesOnDate.length);\n          return _context.abrupt(\"return\", {\n            matches: matchesOnDate\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Schedules;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/schedules.js"],"names":["Layout","SeasonSchedules","Link","fetch","Schedules","props","console","log","matches","map","match","id","a","h","getInitialProps","res","json","data","searchDate","matchesOnDate","filter","entry","est","indexOf","length"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,UAAAC,KAAK;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,KAAK,CAACC,EAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,KAAK,CAACE,CAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,KAAK,CAACG,CAAZ,CAFJ,CADJ,CADJ,CADoB;AAAA,GAAvB,CADL,CAFJ,CADJ;AAiBH,CAnBD;;AAoBAT,SAAS,CAACU,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACN,iBAAUb,eAAV,EADM;;AAAA;AAClBc,UAAAA,GADkB;AAAA;AAAA,2CAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBC,UAAAA,IAFkB;AAIlBC,UAAAA,UAJkB,GAIL,UAJK;AAMlBC,UAAAA,aANkB,GAMFF,IAAI,CAACG,MAAL,CAAY,UAASC,KAAT,EAAgB;AAC9C,mBAAOA,KAAK,CAACC,GAAN,CAAUC,OAAV,CAAkBL,UAAlB,IAAgC,CAAC,CAAxC;AACH,WAFqB,CANE;AAUxBZ,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCY,aAAa,CAACK,MAA9C;AAVwB,2CAYjB;AACHhB,YAAAA,OAAO,EAAEW;AADN,WAZiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAmBA,eAAef,SAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Schedules = props => {\n    console.log('Hier Props >>>>>>', props);\n    return (\n        <Layout>\n            <h1>NHL Schedules</h1>\n            <ul>\n                {props.matches.map(match => (\n                    <li key={match.id}>\n                        <Link href=\"/p/[id]\" as={`/p/${match.id}`}>\n                            <a>\n                                <div>{match.a}</div>\n                                <div>{match.h}</div>\n                            </a>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </Layout>\n    );\n};\nSchedules.getInitialProps = async function() {\n    const res = await import(`${SeasonSchedules}`);\n    const data = await res.json();\n\n    const searchDate = '20200204';\n\n    const matchesOnDate = data.filter(function(entry) {\n        return entry.est.indexOf(searchDate) > -1;\n    });\n\n    console.log('matchesToday::::', matchesOnDate.length);\n\n    return {\n        matches: matchesOnDate\n    };\n\n    //Beispiel\n    // {\"id\":2019020814,\"est\":\"20200204 19:00:00\",\"a\":\"VGK\",\"h\":\"TBL\"}\n};\nexport default Schedules;\n"]},"metadata":{},"sourceType":"module"}