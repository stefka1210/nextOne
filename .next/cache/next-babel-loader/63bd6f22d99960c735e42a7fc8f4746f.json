{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/stefka1210/theLab/nextOne/components/Clock.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nvar Container = styled.div.withConfig({\n  displayName: \"Clock__Container\",\n  componentId: \"sc-1o7ap0w-0\"\n})([\"font-size:1.1rem;\"]);\n\nvar Clock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clock, _React$Component);\n\n  function Clock(props) {\n    var _this;\n\n    _classCallCheck(this, Clock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clock).call(this, props));\n    _this.state = {\n      time: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(Clock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.intervalID = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      this.setState({\n        time: new Date()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var time = this.state.time;\n      var options = {\n        year: 'numeric',\n        month: 'numeric',\n        day: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      };\n      var local = new Intl.DateTimeFormat('de-DE', options).format(time); // const eastern = time.getHours;\n\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Locale: \", local));\n    }\n  }]);\n\n  return Clock;\n}(React.Component);\n\nexport default Clock;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/components/Clock.js"],"names":["React","styled","Container","div","Clock","props","state","time","Date","intervalID","setInterval","tick","clearInterval","setState","options","year","month","day","minute","second","local","Intl","DateTimeFormat","format","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,yBAAf;;IAIMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADG,KAAb;AAFe;AAKlB;;;;wCACmB;AAAA;;AAChB,WAAKC,UAAL,GAAkBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OAAD,EAAoB,IAApB,CAA7B;AACH;;;2CACsB;AACnBC,MAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH;;;2BACM;AACH,WAAKI,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AADI,OAAd;AAGH;;;6BAEQ;AAAA,UACED,IADF,GACU,KAAKD,KADf,CACEC,IADF;AAGL,UAAMO,OAAO,GAAG;AAACC,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,KAAK,EAAE,SAAzB;AAAoCC,QAAAA,GAAG,EAAE,SAAzC;AAAoDC,QAAAA,MAAM,EAAE,SAA5D;AAAuEC,QAAAA,MAAM,EAAE;AAA/E,OAAhB;AACA,UAAMC,KAAK,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCR,OAAjC,EAA0CS,MAA1C,CAAiDhB,IAAjD,CAAd,CAJK,CAKL;;AAEA,aACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAca,KAAd,CADJ,CADJ;AAKH;;;;EA/BepB,KAAK,CAACwB,S;;AAiC1B,eAAepB,KAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    font-size: 1.1rem;\n`;\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date()\n        };\n    }\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n    tick() {\n        this.setState({\n            time: new Date()\n        });\n    }\n\n    render() {\n        const {time} = this.state;\n\n        const options = {year: 'numeric', month: 'numeric', day: '2-digit', minute: '2-digit', second: '2-digit'};\n        const local = new Intl.DateTimeFormat('de-DE', options).format(time);\n        // const eastern = time.getHours;\n\n        return (\n            <Container>\n                <div>Locale: {local}</div>\n            </Container>\n        );\n    }\n}\nexport default Clock;\n"]},"metadata":{},"sourceType":"module"}