{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stefka1210/theLab/nextOne/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Franchises from '../data/franchise';\nimport TeamColors from '../data/TeamColors';\nimport styled from 'styled-components';\nvar TeamList = styled.div.withConfig({\n  displayName: \"pages__TeamList\",\n  componentId: \"sc-1h0jejb-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(240px,1fr));grid-template-rows:repeat(auto-fit,minmax(240px,1fr));gap:20px;\"]);\nvar FranLogo = styled.img.withConfig({\n  displayName: \"pages__FranLogo\",\n  componentId: \"sc-1h0jejb-1\"\n})([\"margin-top:8px;height:80px;transform:scale(1);transition:transform 300ms ease-in-out;svg{height:100%;}\"]);\nvar LocName = styled.div.withConfig({\n  displayName: \"pages__LocName\",\n  componentId: \"sc-1h0jejb-2\"\n})([\"font-size:14px;font-size:1.1rem;letter-spacing:0em;transition:letter-spacing 300ms ease-in-out;\"]);\nvar NickName = styled.div.withConfig({\n  displayName: \"pages__NickName\",\n  componentId: \"sc-1h0jejb-3\"\n})([\"font-size:1.6rem;letter-spacing:0em;transition:letter-spacing 300ms ease-in-out;\"]);\nvar ColorsContainer = styled.div.withConfig({\n  displayName: \"pages__ColorsContainer\",\n  componentId: \"sc-1h0jejb-4\"\n})([\"display:flex;align-items:center;justify-content:center;margin-top:12px;height:10px;width:100px;background:\", \";\"], function (props) {\n  return props.teamColor || 'palevioletred';\n});\nvar Color = styled.div.withConfig({\n  displayName: \"pages__Color\",\n  componentId: \"sc-1h0jejb-5\"\n})([\"background:\", \";\"], function (props) {\n  return props.teamColor || 'palevioletred';\n});\nvar Team = styled.div.withConfig({\n  displayName: \"pages__Team\",\n  componentId: \"sc-1h0jejb-6\"\n})([\"display:flex;align-items:center;justify-content:center;position:relative;width:240px;height:240px;background:#cccccc;cursor:pointer;&:hover{background:#414141;color:white;\", \"{transform:scale(1.2);transition:transform 300ms ease-in-out;}\", \"{letter-spacing:0.08em;transition:letter-spacing 300ms ease-in-out;}\", \"{letter-spacing:0.08em;transition:letter-spacing 300ms ease-in-out;}}\"], FranLogo, LocName, NickName);\nvar ATag = styled.a.withConfig({\n  displayName: \"pages__ATag\",\n  componentId: \"sc-1h0jejb-7\"\n})([\"display:flex;flex-direction:column;align-items:center;font-weight:700;text-align:center;padding:8px;text-transform:uppercase;\"]);\nvar TeamId = styled.div.withConfig({\n  displayName: \"pages__TeamId\",\n  componentId: \"sc-1h0jejb-8\"\n})([\"font-size:1rem;\"]);\n\nvar getTeamLogo = function getTeamLogo(_short) {\n  var teamId = Franchises.teams.find(function (x) {\n    return x.abbreviation === \"\".concat(_short);\n  }).id;\n\n  var shortUpped = _short.toUpperCase();\n\n  var logoFileName = \"\".concat(teamId, \"_\").concat(shortUpped, \".svg\");\n  return logoFileName;\n};\n\nvar getTeamColor = function getTeamColor(teamId, colorType) {\n  debugger;\n  var teamObj = TeamColors.find(function (x) {\n    return x.id === teamId;\n  });\n\n  if (colorType == 'dark') {\n    return teamObj.hexDark;\n  } else {\n    return teamObj.hexBright;\n  }\n};\n\nvar Index = function Index(props) {\n  console.log(props);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"NHL Teams\"), __jsx(TeamList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, props.teams.map(function (team) {\n    return __jsx(Team, {\n      key: team.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(team.teamName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(ATag, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(TeamId, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, team.id, \" - \", team.abbreviation), __jsx(LocName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, team.locationName), __jsx(NickName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, team.teamName), __jsx(FranLogo, {\n      src: \"/logos/\".concat(getTeamLogo(team.abbreviation)),\n      alt: \"franlogo_\".concat(team.abbreviation),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), __jsx(ColorsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(Color, {\n      teamColor: getTeamColor(team.id, 'bright'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), __jsx(Color, {\n      teamColor: getTeamColor(team.id, 'dark'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })))));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n          // const res = await fetch('https://statsapi.web.nhl.com/api/v1/teams');\n          // const data = await res.json();\n          data = Franchises;\n          console.log(\"team data fetched. Count: \".concat(data.teams));\n          return _context.abrupt(\"return\", {\n            teams: data.teams\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/index.js"],"names":["Layout","Link","fetch","Franchises","TeamColors","styled","TeamList","div","FranLogo","img","LocName","NickName","ColorsContainer","props","teamColor","Color","Team","ATag","a","TeamId","getTeamLogo","short","teamId","teams","find","x","abbreviation","id","shortUpped","toUpperCase","logoFileName","getTeamColor","colorType","teamObj","hexDark","hexBright","Index","console","log","map","team","name","teamName","locationName","getInitialProps","data"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Franchises from '../data/franchise';\nimport TeamColors from '../data/TeamColors';\nimport styled from 'styled-components';\n\nconst TeamList = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n    grid-template-rows: repeat(auto-fit, minmax(240px, 1fr));\n    gap: 20px;\n`;\nconst FranLogo = styled.img`\n    margin-top: 8px;\n    height: 80px;\n    transform: scale(1);\n    transition: transform 300ms ease-in-out;\n    svg {\n        height: 100%;\n    }\n`;\nconst LocName = styled.div`\n    font-size: 14px;\n    font-size: 1.1rem;\n    letter-spacing: 0em;\n    transition: letter-spacing 300ms ease-in-out;\n`;\nconst NickName = styled.div`\n    font-size: 1.6rem;\n    letter-spacing: 0em;\n    transition: letter-spacing 300ms ease-in-out;\n`;\nconst ColorsContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 12px;\n    height: 10px;\n    width: 100px;\n    background: ${props => props.teamColor || 'palevioletred'};\n`;\nconst Color = styled.div`\n    background: ${props => props.teamColor || 'palevioletred'};\n`;\nconst Team = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    width: 240px;\n    height: 240px;\n    background: #cccccc;\n    cursor: pointer;\n    &:hover {\n        background: #414141;\n        color: white;\n        ${FranLogo} {\n            transform: scale(1.2);\n            transition: transform 300ms ease-in-out;\n        }\n        ${LocName} {\n            letter-spacing: 0.08em;\n            transition: letter-spacing 300ms ease-in-out;\n        }\n        ${NickName} {\n            letter-spacing: 0.08em;\n            transition: letter-spacing 300ms ease-in-out;\n        }\n    }\n`;\nconst ATag = styled.a`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-weight: 700;\n    text-align: center;\n    padding: 8px;\n    text-transform: uppercase;\n`;\nconst TeamId = styled.div`\n    font-size: 1rem;\n`;\n\nconst getTeamLogo = short => {\n    const teamId = Franchises.teams.find(x => x.abbreviation === `${short}`).id;\n    const shortUpped = short.toUpperCase();\n    const logoFileName = `${teamId}_${shortUpped}.svg`;\n    return logoFileName;\n};\nconst getTeamColor = (teamId, colorType) => {\n    debugger;\n    const teamObj = TeamColors.find(x => x.id === teamId);\n    if (colorType == 'dark') {\n        return teamObj.hexDark;\n    } else {\n        return teamObj.hexBright;\n    }\n};\n\nconst Index = props => {\n    console.log(props);\n\n    return (\n        <Layout>\n            <h1>NHL Teams</h1>\n            <TeamList>\n                {props.teams.map(team => (\n                    <Team key={team.name}>\n                        <Link href=\"/p/[id]\" as={`/p/${team.teamName}`}>\n                            <ATag>\n                                <TeamId>\n                                    {team.id} - {team.abbreviation}\n                                </TeamId>\n\n                                <LocName>{team.locationName}</LocName>\n                                <NickName>{team.teamName}</NickName>\n\n                                <FranLogo\n                                    src={`/logos/${getTeamLogo(team.abbreviation)}`}\n                                    alt={`franlogo_${team.abbreviation}`}\n                                />\n                                {/* <TeamColor teamColor={`/logos/${getTeamColor(team.id)}`} /> */}\n                                <ColorsContainer>\n                                    <Color teamColor={getTeamColor(team.id, 'bright')} />\n                                    <Color teamColor={getTeamColor(team.id, 'dark')} />\n                                </ColorsContainer>\n                            </ATag>\n                        </Link>\n                    </Team>\n                ))}\n            </TeamList>\n        </Layout>\n    );\n};\nIndex.getInitialProps = async function() {\n    // const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    // const res = await fetch('https://statsapi.web.nhl.com/api/v1/teams');\n    // const data = await res.json();\n    const data = Franchises;\n\n    console.log(`team data fetched. Count: ${data.teams}`);\n\n    return {\n        teams: data.teams\n    };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}