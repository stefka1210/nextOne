{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/Users/stefka1210/theLab/nextOne/pages/schedules.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout'; // import SeasonSchedules from '../data/SeasonSchedule-20192020';\n\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar SeasonSchedules = [{\n  id: 2019020001,\n  est: '20191002 19:00:00',\n  a: 'OTT',\n  h: 'TOR'\n}, {\n  id: 2019020002,\n  est: '20191002 20:00:00',\n  a: 'WSH',\n  h: 'STL'\n}, {\n  id: 2019020003,\n  est: '20191002 22:00:00',\n  a: 'VAN',\n  h: 'EDM'\n}];\n\nvar Schedules = function Schedules(props) {\n  console.log('Hier Props >>>>>>', props);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"NHL Schedules\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.matches.map(function (match) {\n    return __jsx(\"li\", {\n      key: match.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, match.a), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, match.h)));\n  })));\n};\n\nSchedules.getInitialProps = function _callee() {\n  var data, searchDate, matchesOnDate;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(import(SeasonSchedules));\n\n        case 2:\n          data = _context.sent;\n          // const data = await res.json();\n          // const data = await import('../data/SeasonSchedule-20192020');\n          // const data = SeasonSchedules;\n          searchDate = '20191002'; // console.log('data::::' + typeof data[4].est);\n\n          matchesOnDate = _Object$values(data).filter(function (entry) {\n            return entry.est.indexOf(searchDate) > -1;\n          }); // const matchesOnDate = Object.values(data).filter(entry => entry.est.indexOf(searchDate) > -1);\n\n          console.log('matchesToday::::', matchesOnDate.length);\n          return _context.abrupt(\"return\", {\n            matches: matchesOnDate\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Schedules;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/schedules.js"],"names":["Layout","Link","fetch","SeasonSchedules","id","est","a","h","Schedules","props","console","log","matches","map","match","getInitialProps","data","searchDate","matchesOnDate","filter","entry","indexOf","length"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,eAAe,GAAG,CACpB;AAACC,EAAAA,EAAE,EAAE,UAAL;AAAiBC,EAAAA,GAAG,EAAE,mBAAtB;AAA2CC,EAAAA,CAAC,EAAE,KAA9C;AAAqDC,EAAAA,CAAC,EAAE;AAAxD,CADoB,EAEpB;AAACH,EAAAA,EAAE,EAAE,UAAL;AAAiBC,EAAAA,GAAG,EAAE,mBAAtB;AAA2CC,EAAAA,CAAC,EAAE,KAA9C;AAAqDC,EAAAA,CAAC,EAAE;AAAxD,CAFoB,EAGpB;AAACH,EAAAA,EAAE,EAAE,UAAL;AAAiBC,EAAAA,GAAG,EAAE,mBAAtB;AAA2CC,EAAAA,CAAC,EAAE,KAA9C;AAAqDC,EAAAA,CAAC,EAAE;AAAxD,CAHoB,CAAxB;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,UAAAC,KAAK;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACV,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMU,KAAK,CAACR,CAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMQ,KAAK,CAACP,CAAZ,CAFJ,CAFJ,CADoB;AAAA,GAAvB,CADL,CAFJ,CADJ;AAiBH,CAnBD;;AAoBAC,SAAS,CAACO,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACL,OAAOZ,eAAP,CADK;;AAAA;AAClBa,UAAAA,IADkB;AAExB;AAEA;AACA;AAEMC,UAAAA,UAPkB,GAOL,UAPK,EASxB;;AAEMC,UAAAA,aAXkB,GAWF,eAAcF,IAAd,EAAoBG,MAApB,CAA2B,UAASC,KAAT,EAAgB;AAC7D,mBAAOA,KAAK,CAACf,GAAN,CAAUgB,OAAV,CAAkBJ,UAAlB,IAAgC,CAAC,CAAxC;AACH,WAFqB,CAXE,EAexB;;AAEAP,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCO,aAAa,CAACI,MAA9C;AAjBwB,2CAmBjB;AACHV,YAAAA,OAAO,EAAEM;AADN,WAnBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AA0BA,eAAeV,SAAf","sourcesContent":["import Layout from '../components/MyLayout';\n// import SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst SeasonSchedules = [\n    {id: 2019020001, est: '20191002 19:00:00', a: 'OTT', h: 'TOR'},\n    {id: 2019020002, est: '20191002 20:00:00', a: 'WSH', h: 'STL'},\n    {id: 2019020003, est: '20191002 22:00:00', a: 'VAN', h: 'EDM'}\n];\n\nconst Schedules = props => {\n    console.log('Hier Props >>>>>>', props);\n    return (\n        <Layout>\n            <h1>NHL Schedules</h1>\n            <ul>\n                {props.matches.map(match => (\n                    <li key={match.id}>\n                        {/* <Link href=\"/p/[id]\" as={`/p/${match.id}`}> */}\n                        <a>\n                            <div>{match.a}</div>\n                            <div>{match.h}</div>\n                        </a>\n                        {/* </Link> */}\n                    </li>\n                ))}\n            </ul>\n        </Layout>\n    );\n};\nSchedules.getInitialProps = async function() {\n    const data = await import(SeasonSchedules);\n    // const data = await res.json();\n\n    // const data = await import('../data/SeasonSchedule-20192020');\n    // const data = SeasonSchedules;\n\n    const searchDate = '20191002';\n\n    // console.log('data::::' + typeof data[4].est);\n\n    const matchesOnDate = Object.values(data).filter(function(entry) {\n        return entry.est.indexOf(searchDate) > -1;\n    });\n\n    // const matchesOnDate = Object.values(data).filter(entry => entry.est.indexOf(searchDate) > -1);\n\n    console.log('matchesToday::::', matchesOnDate.length);\n\n    return {\n        matches: matchesOnDate\n    };\n\n    //Beispiel\n    // {\"id\":2019020814,\"est\":\"20200204 19:00:00\",\"a\":\"VGK\",\"h\":\"TBL\"}\n};\nexport default Schedules;\n"]},"metadata":{},"sourceType":"module"}