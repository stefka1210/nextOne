{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  console.log('props:' + props);\n  return null; // (\n  //     <Layout>\n  //         <h1>NHL teams</h1>\n  //         <ul>\n  //             {props.teams.map(team => (\n  //                 <li key={team.name}>\n  //                     <Link href=\"/p/[id]\" as={`/p/${team.name}`}>\n  //                         <a>{team.name}</a>\n  //                     </Link>\n  //                 </li>\n  //             ))}\n  //         </ul>\n  //     </Layout>\n  // );\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://statsapi.web.nhl.com/api/v1/teams'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"team data fetched. Count: \".concat(data.teams));\n          return _context.abrupt(\"return\", {\n            teams: data.teams.map(function (entry) {\n              return entry.team;\n            }) // teams: data.length\n\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/index.js"],"names":["Layout","Link","fetch","Index","props","console","log","getInitialProps","res","json","data","teams","map","entry","team"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,KAAvB;AACA,SAAO,IAAP,CAFmB,CAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAjBD;;AAkBAD,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFL,KAAK,CAAC,2CAAD,CAFH;;AAAA;AAEdM,UAAAA,GAFc;AAAA;AAAA,2CAGDA,GAAG,CAACC,IAAJ,EAHC;;AAAA;AAGdC,UAAAA,IAHc;AAKpBL,UAAAA,OAAO,CAACC,GAAR,qCAAyCI,IAAI,CAACC,KAA9C;AALoB,2CAOb;AACHA,YAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACC,IAAV;AAAA,aAApB,CADJ,CAEH;;AAFG,WAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAYA,eAAeX,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => {\n    console.log('props:' + props);\n    return null;\n    // (\n    //     <Layout>\n    //         <h1>NHL teams</h1>\n    //         <ul>\n    //             {props.teams.map(team => (\n    //                 <li key={team.name}>\n    //                     <Link href=\"/p/[id]\" as={`/p/${team.name}`}>\n    //                         <a>{team.name}</a>\n    //                     </Link>\n    //                 </li>\n    //             ))}\n    //         </ul>\n    //     </Layout>\n    // );\n};\nIndex.getInitialProps = async function() {\n    // const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const res = await fetch('https://statsapi.web.nhl.com/api/v1/teams');\n    const data = await res.json();\n\n    console.log(`team data fetched. Count: ${data.teams}`);\n\n    return {\n        teams: data.teams.map(entry => entry.team)\n        // teams: data.length\n    };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}