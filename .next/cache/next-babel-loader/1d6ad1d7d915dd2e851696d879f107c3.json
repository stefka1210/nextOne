{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/Users/stefka1210/theLab/nextOne/pages/schedules.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Franchises from '../data/franchise';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nvar MatchList = styled.div.withConfig({\n  displayName: \"schedules__MatchList\",\n  componentId: \"sc-1f0vohs-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(320px,1fr));gap:20px;\"]);\nvar FranLogo = styled.img.withConfig({\n  displayName: \"schedules__FranLogo\",\n  componentId: \"sc-1f0vohs-1\"\n})([\"position:absolute;:first-child{left:0px;}:last-child{right:0px;}width:25%;height:25%;transform:scale(1);transition:transform 300ms ease-in-out;z-index:11;svg{height:100%;width:100%;}\"]);\nvar Match = styled.div.withConfig({\n  displayName: \"schedules__Match\",\n  componentId: \"sc-1f0vohs-2\"\n})([\"background:#ccc;height:240px;display:flex;align-items:center;justify-content:center;cursor:pointer;&:hover{background:#9a9a9a;color:white;\", \"{transform:scale(1.2);transition:transform 300ms ease-in-out;}}\"], FranLogo);\nvar ATag = styled.div.withConfig({\n  displayName: \"schedules__ATag\",\n  componentId: \"sc-1f0vohs-3\"\n})([\"position:relative;display:flex;align-items:center;justify-content:center;text-transform:none;color:inherit;text-decoration:none;width:100%;height:100%;\"]);\nvar TeamName = styled.div.withConfig({\n  displayName: \"schedules__TeamName\",\n  componentId: \"sc-1f0vohs-4\"\n})([\"font-size:2rem;font-weight:700;\"]);\nvar Meta = styled.div.withConfig({\n  displayName: \"schedules__Meta\",\n  componentId: \"sc-1f0vohs-5\"\n})([\"display:flex;font-size:1rem;padding:0px 30px;align-items:center;\"]);\n\nvar getTeamLogo = function getTeamLogo(_short) {\n  var teamId = Franchises.teams.find(function (x) {\n    return x.abbreviation === \"\".concat(_short);\n  }).id;\n\n  var shortUpped = _short.toUpperCase();\n\n  var logoFileName = \"\".concat(teamId, \"_\").concat(shortUpped, \".svg\");\n  return logoFileName;\n};\n\nvar Schedules = function Schedules(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"NHL Schedules\"), __jsx(MatchList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.matches.map(function (match) {\n    return __jsx(Match, {\n      key: match.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/match/[id]\",\n      as: \"/match/\".concat(match.id),\n      passHref: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(ATag, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(FranLogo, {\n      src: \"/logos/\".concat(getTeamLogo(match.a)),\n      alt: \"img-franlogo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), __jsx(TeamName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, match.a), __jsx(Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"@\"), __jsx(TeamName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, match.h), __jsx(FranLogo, {\n      src: \"/logos/\".concat(getTeamLogo(match.h)),\n      alt: \"img-franlogo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))));\n  })));\n};\n\nSchedules.getInitialProps = function _callee() {\n  var data, time, options, easterndate, year, month, day, searchEasterndate, date, searchDate, matchesOnDate;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          data = SeasonSchedules; // search matches in eastern-time \"Today\"\n\n          time = new Date();\n          options = {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          };\n          options.timeZone = 'America/New_York';\n          easterndate = new Intl.DateTimeFormat('de-DE', options).format(time);\n          console.log('easternSearchdate:::', easterndate);\n          year = easterndate.slice(6, 9);\n          month = easterndate.slice(3, 4);\n          day = easterndate.slice(0, 1);\n          searchEasterndate = year + month + day;\n          console.log('easternSearchdate:::', year); /// END ---------------\n          //ToDo: Eastern Standard Time\n\n          date = new Date().toISOString();\n          searchDate = date.substr(0, date.length - 14).replace(/\\-/g, '');\n          matchesOnDate = _Object$values(data).filter(function (entry) {\n            return entry.est.indexOf(searchDate) > -1;\n          });\n          return _context.abrupt(\"return\", {\n            matches: matchesOnDate\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Schedules;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/schedules.js"],"names":["Layout","SeasonSchedules","Franchises","Link","styled","MatchList","div","FranLogo","img","Match","ATag","TeamName","Meta","getTeamLogo","short","teamId","teams","find","x","abbreviation","id","shortUpped","toUpperCase","logoFileName","Schedules","props","matches","map","match","a","h","getInitialProps","data","time","Date","options","year","month","day","timeZone","easterndate","Intl","DateTimeFormat","format","console","log","slice","searchEasterndate","date","toISOString","searchDate","substr","length","replace","matchesOnDate","filter","entry","est","indexOf"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Franchises from '../data/franchise';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n\nconst MatchList = styled.div`\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); */\n    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n    gap: 20px;\n`;\nconst FranLogo = styled.img`\n    position: absolute;\n    :first-child {\n        left: 0px;\n    }\n    :last-child {\n        right: 0px;\n    }\n    width: 25%;\n    height: 25%;\n    transform: scale(1);\n    transition: transform 300ms ease-in-out;\n    z-index: 11;\n    svg {\n        height: 100%;\n        width: 100%;\n    }\n`;\nconst Match = styled.div`\n    background: #ccc;\n    height: 240px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    &:hover {\n        background: #9a9a9a;\n        color: white;\n        ${FranLogo} {\n            transform: scale(1.2);\n            transition: transform 300ms ease-in-out;\n        }\n    }\n`;\nconst ATag = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-transform: none;\n    color: inherit;\n    text-decoration: none;\n    width: 100%;\n    height: 100%;\n`;\nconst TeamName = styled.div`\n    font-size: 2rem;\n    font-weight: 700;\n`;\nconst Meta = styled.div`\n    display: flex;\n    font-size: 1rem;\n    padding: 0px 30px;\n    align-items: center;\n`;\nconst getTeamLogo = short => {\n    const teamId = Franchises.teams.find(x => x.abbreviation === `${short}`).id;\n    const shortUpped = short.toUpperCase();\n    const logoFileName = `${teamId}_${shortUpped}.svg`;\n    return logoFileName;\n};\nconst Schedules = props => {\n    return (\n        <Layout>\n            <h1>NHL Schedules</h1>\n            <MatchList>\n                {props.matches.map(match => (\n                    <Match key={match.id}>\n                        <Link href=\"/match/[id]\" as={`/match/${match.id}`} passHref>\n                            <ATag>\n                                <FranLogo src={`/logos/${getTeamLogo(match.a)}`} alt=\"img-franlogo\" />\n                                <TeamName>{match.a}</TeamName>\n                                <Meta>@</Meta>\n                                <TeamName>{match.h}</TeamName>\n                                <FranLogo src={`/logos/${getTeamLogo(match.h)}`} alt=\"img-franlogo\" />\n                            </ATag>\n                        </Link>\n                    </Match>\n                ))}\n            </MatchList>\n        </Layout>\n    );\n};\nSchedules.getInitialProps = async function() {\n    const data = SeasonSchedules;\n\n    // search matches in eastern-time \"Today\"\n    const time = new Date();\n    const options = {year: 'numeric', month: '2-digit', day: '2-digit'};\n    options.timeZone = 'America/New_York';\n\n    const easterndate = new Intl.DateTimeFormat('de-DE', options).format(time);\n\n    console.log('easternSearchdate:::', easterndate);\n    const year = easterndate.slice(6, 9);\n    const month = easterndate.slice(3, 4);\n    const day = easterndate.slice(0, 1);\n\n    const searchEasterndate = year + month + day;\n    console.log('easternSearchdate:::', year);\n\n    /// END ---------------\n\n    //ToDo: Eastern Standard Time\n    const date = new Date().toISOString();\n\n    const searchDate = date.substr(0, date.length - 14).replace(/\\-/g, '');\n\n    const matchesOnDate = Object.values(data).filter(entry => {\n        return entry.est.indexOf(searchDate) > -1;\n    });\n    return {\n        matches: matchesOnDate\n    };\n};\nexport default Schedules;\n"]},"metadata":{},"sourceType":"module"}