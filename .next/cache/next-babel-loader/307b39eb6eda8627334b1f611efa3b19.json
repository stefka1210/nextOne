{"ast":null,"code":"var _jsxFileName = \"/Users/stefka1210/theLab/nextOne/pages/schedules.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Link from 'next/link';\nimport styled from 'styled-components'; // import fetch from 'isomorphic-unfetch';\n// const SeasonSchedules = [\n//     {id: 2019020001, est: '20191002 19:00:00', a: 'OTT', h: 'TOR'},\n//     {id: 2019020002, est: '20191002 20:00:00', a: 'WSH', h: 'STL'},\n//     {id: 2019020003, est: '20191002 22:00:00', a: 'VAN', h: 'EDM'},\n//     {id: 2019020034, est: '20191007 19:00:00', a: 'STL', h: 'TOR'},\n//     {id: 2019020035, est: '20191007 19:00:00', a: 'BUF', h: 'CBJ'},\n//     {id: 2019020036, est: '20191008 19:00:00', a: 'CAR', h: 'FLA'}\n// ];\n\nconst MatchList = styled.div.withConfig({\n  displayName: \"schedules__MatchList\",\n  componentId: \"sc-1f0vohs-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(480px,1fr));gap:20px;\"]);\nconst Match = styled.div.withConfig({\n  displayName: \"schedules__Match\",\n  componentId: \"sc-1f0vohs-1\"\n})([\"width:480px;background:#ccc;height:240px;display:flex;align-items:center;justify-content:center;\"]);\nconst ATag = styled.a.withConfig({\n  displayName: \"schedules__ATag\",\n  componentId: \"sc-1f0vohs-2\"\n})([\"display:flex;align-items:center;text-transform:none;\"]);\nconst TeamName = styled.div.withConfig({\n  displayName: \"schedules__TeamName\",\n  componentId: \"sc-1f0vohs-3\"\n})([\"font-size:2rem;font-weight:700;\"]);\nconst Meta = styled.div.withConfig({\n  displayName: \"schedules__Meta\",\n  componentId: \"sc-1f0vohs-4\"\n})([\"display:flex;font-size:1rem;padding:0px 30px;align-items:center;\"]);\n\nconst Schedules = props => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"NHL Schedules\"), __jsx(MatchList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.matches.map(match => __jsx(Match, {\n    key: match.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/match/[id]\",\n    as: `/match/${match.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(ATag, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(TeamName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, match.a), __jsx(Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"@\"), __jsx(TeamName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, match.h)))))));\n};\n\nSchedules.getInitialProps = async function () {\n  const data = SeasonSchedules;\n  const searchDate = '20200213';\n  const date = Date.now();\n  console.log('DateNow:::', date);\n  const options = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    literal: ''\n  };\n  const dateTimeFormat = new Intl.DateTimeFormat('sr-RS', options);\n  console.log('Intl-Date:::', dateTimeFormat.format(new Date())); // console.log('Intl-Date:::', new Intl.DateTimeFormat(['ban', 'id']).formatToParts(date));\n\n  Intl.DateTimeFormat('sr-RS', options);\n  const matchesOnDate = Object.values(data).filter(function (entry) {\n    return entry.est.indexOf(searchDate) > -1;\n  });\n  console.log('matchesOnDate:' + matchesOnDate[0].a);\n  return {\n    matches: matchesOnDate\n  };\n};\n\nexport default Schedules;","map":{"version":3,"sources":["/Users/stefka1210/theLab/nextOne/pages/schedules.js"],"names":["Layout","SeasonSchedules","Link","styled","MatchList","div","Match","ATag","a","TeamName","Meta","Schedules","props","matches","map","match","id","h","getInitialProps","data","searchDate","date","Date","now","console","log","options","year","month","day","literal","dateTimeFormat","Intl","DateTimeFormat","format","matchesOnDate","Object","values","filter","entry","est","indexOf"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n// import fetch from 'isomorphic-unfetch';\n\n// const SeasonSchedules = [\n//     {id: 2019020001, est: '20191002 19:00:00', a: 'OTT', h: 'TOR'},\n//     {id: 2019020002, est: '20191002 20:00:00', a: 'WSH', h: 'STL'},\n//     {id: 2019020003, est: '20191002 22:00:00', a: 'VAN', h: 'EDM'},\n//     {id: 2019020034, est: '20191007 19:00:00', a: 'STL', h: 'TOR'},\n//     {id: 2019020035, est: '20191007 19:00:00', a: 'BUF', h: 'CBJ'},\n//     {id: 2019020036, est: '20191008 19:00:00', a: 'CAR', h: 'FLA'}\n// ];\n\nconst MatchList = styled.div`\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(480px, 1fr)); */\n    grid-template-columns: repeat(auto-fit, minmax(480px, 1fr));\n    gap: 20px;\n`;\nconst Match = styled.div`\n    width: 480px;\n    background: #ccc;\n\n    height: 240px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst ATag = styled.a`\n    display: flex;\n    align-items: center;\n    text-transform: none;\n`;\nconst TeamName = styled.div`\n    font-size: 2rem;\n    font-weight: 700;\n`;\nconst Meta = styled.div`\n    display: flex;\n    font-size: 1rem;\n    padding: 0px 30px;\n    align-items: center;\n`;\n\nconst Schedules = props => {\n    return (\n        <Layout>\n            <h1>NHL Schedules</h1>\n            <MatchList>\n                {props.matches.map(match => (\n                    <Match key={match.id}>\n                        <Link href=\"/match/[id]\" as={`/match/${match.id}`}>\n                            <ATag>\n                                <TeamName>{match.a}</TeamName>\n                                <Meta>@</Meta>\n                                <TeamName>{match.h}</TeamName>\n                            </ATag>\n                        </Link>\n                    </Match>\n                ))}\n            </MatchList>\n        </Layout>\n    );\n};\nSchedules.getInitialProps = async function() {\n    const data = SeasonSchedules;\n    const searchDate = '20200213';\n\n    const date = Date.now();\n    console.log('DateNow:::', date);\n\n    const options = {year: 'numeric', month: 'numeric', day: 'numeric', literal: ''};\n    const dateTimeFormat = new Intl.DateTimeFormat('sr-RS', options);\n    console.log('Intl-Date:::', dateTimeFormat.format(new Date()));\n    // console.log('Intl-Date:::', new Intl.DateTimeFormat(['ban', 'id']).formatToParts(date));\n\n    Intl.DateTimeFormat('sr-RS', options);\n    const matchesOnDate = Object.values(data).filter(function(entry) {\n        return entry.est.indexOf(searchDate) > -1;\n    });\n\n    console.log('matchesOnDate:' + matchesOnDate[0].a);\n\n    return {\n        matches: matchesOnDate\n    };\n};\nexport default Schedules;\n"]},"metadata":{},"sourceType":"module"}