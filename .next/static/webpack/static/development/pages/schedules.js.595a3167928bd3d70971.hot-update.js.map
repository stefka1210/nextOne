{"version":3,"file":"static/webpack/static/development/pages/schedules.js.595a3167928bd3d70971.hot-update.js","sources":["webpack:///./pages/schedules.js"],"sourcesContent":["import Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Franchises from '../data/franchise';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n\nconst MatchList = styled.div`\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); */\n    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n    gap: 20px;\n`;\nconst FranLogo = styled.img`\n    position: absolute;\n    :first-child {\n        left: 0px;\n    }\n    :last-child {\n        right: 0px;\n    }\n    width: 25%;\n    height: 25%;\n    transform: scale(1);\n    transition: transform 300ms ease-in-out;\n    z-index: 11;\n    svg {\n        height: 100%;\n        width: 100%;\n    }\n`;\nconst Match = styled.div`\n    background: #ccc;\n    height: 240px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    &:hover {\n        background: #9a9a9a;\n        color: white;\n        ${FranLogo} {\n            transform: scale(1.2);\n            transition: transform 300ms ease-in-out;\n        }\n    }\n`;\nconst ATag = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-transform: none;\n    color: inherit;\n    text-decoration: none;\n    width: 100%;\n    height: 100%;\n`;\nconst TeamName = styled.div`\n    font-size: 2rem;\n    font-weight: 700;\n`;\nconst Meta = styled.div`\n    display: flex;\n    font-size: 1rem;\n    padding: 0px 30px;\n    align-items: center;\n`;\nconst getTeamLogo = short => {\n    const teamId = Franchises.teams.find(x => x.abbreviation === `${short}`).id;\n    const shortUpped = short.toUpperCase();\n    const logoFileName = `${teamId}_${shortUpped}.svg`;\n    return logoFileName;\n};\nconst Schedules = props => {\n    return (\n        <Layout>\n            <h1>NHL Schedules</h1>\n            <MatchList>\n                {props.matches.map(match => (\n                    <Match key={match.id}>\n                        <Link href=\"/match/[id]\" as={`/match/${match.id}`} passHref>\n                            <ATag>\n                                <FranLogo src={`/logos/${getTeamLogo(match.a)}`} alt=\"img-franlogo\" />\n                                <TeamName>{match.a}</TeamName>\n                                <Meta>@</Meta>\n                                <TeamName>{match.h}</TeamName>\n                                <FranLogo src={`/logos/${getTeamLogo(match.h)}`} alt=\"img-franlogo\" />\n                            </ATag>\n                        </Link>\n                    </Match>\n                ))}\n            </MatchList>\n        </Layout>\n    );\n};\nSchedules.getInitialProps = async function() {\n    const data = SeasonSchedules;\n\n    // search matches in eastern-time \"Today\"\n    const time = new Date();\n    const options = {year: 'numeric', month: '2-digit', day: '2-digit'};\n    options.timeZone = 'America/New_York';\n\n    const easterndate = new Intl.DateTimeFormat('de-DE', options).format(time);\n\n    console.log('easternSearchdate:::', easterndate);\n    const year = easterndate.slice(6, 10);\n    const month = easterndate.slice(3, 5);\n    const day = easterndate.slice(0, 2);\n\n    const searchEasterndate = year + month + day;\n    console.log('easternSearchdate:::', day);\n\n    /// END ---------------\n\n    //ToDo: Eastern Standard Time\n    const date = new Date().toISOString();\n\n    const searchDate = date.substr(0, date.length - 14).replace(/\\-/g, '');\n\n    const matchesOnDate = Object.values(data).filter(entry => {\n        return entry.est.indexOf(searchDate) > -1;\n    });\n    return {\n        matches: matchesOnDate\n    };\n};\nexport default Schedules;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAggBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AA3BA;AA6BA;AADA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA+BA;;;;A","sourceRoot":""}