{"version":3,"file":"static/webpack/static/development/pages/schedules.js.9a7942c4786bbf4153e2.hot-update.js","sources":["webpack:///./pages/schedules.js"],"sourcesContent":["import Layout from '../components/MyLayout';\nimport SeasonSchedules from '../data/SeasonSchedule-20192020';\nimport Franchises from '../data/franchise';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n// import franLogo from '/logos/1_NJD.svg';\n// import fetch from 'isomorphic-unfetch';\n\n// const SeasonSchedules = [\n//     {id: 2019020001, est: '20191002 19:00:00', a: 'OTT', h: 'TOR'},\n//     {id: 2019020002, est: '20191002 20:00:00', a: 'WSH', h: 'STL'},\n//     {id: 2019020003, est: '20191002 22:00:00', a: 'VAN', h: 'EDM'},\n//     {id: 2019020034, est: '20191007 19:00:00', a: 'STL', h: 'TOR'},\n//     {id: 2019020035, est: '20191007 19:00:00', a: 'BUF', h: 'CBJ'},\n//     {id: 2019020036, est: '20191008 19:00:00', a: 'CAR', h: 'FLA'}\n// ];\n\nconst MatchList = styled.div`\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); */\n    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));\n    gap: 20px;\n`;\nconst Match = styled.div`\n    background: #ccc;\n\n    height: 240px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    &:hover {\n        background: #414141;\n        color: white;\n    }\n`;\nconst ATag = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-transform: none;\n\n    width: 100%;\n    height: 100%;\n`;\n\nconst FranLogo = styled.img`\n    position: absolute;\n    :first-child {\n        left: 0px;\n    }\n    :last-child {\n        right: 0px;\n    }\n\n    /* width: 50%; */\n    height: 20%;\n    z-index: 11;\n    /* opacity: 0.5; */\n    svg {\n        /* width: 100%; */\n        height: 100%;\n    }\n`;\nconst TeamName = styled.div`\n    font-size: 2rem;\n    font-weight: 700;\n`;\nconst Meta = styled.div`\n    display: flex;\n    font-size: 1rem;\n    padding: 0px 30px;\n    align-items: center;\n`;\n\n// const myTeam = Franchises.find(x => x.shortname === 'phi');\n\nconst getTeamLogo = short => {\n    const teamId = Franchises.teams.find(x => x.abbreviation === `${short}`).id;\n    const shortUpped = short.toUpperCase();\n    const logoFileName = `${teamId}_${shortUpped}.svg`;\n    return logoFileName;\n};\n\nconsole.log('getTeamLogo:', getTeamLogo('BUF'));\n\nconst Schedules = props => {\n    return (\n        <Layout>\n            <h1>NHL Schedules</h1>\n            <MatchList>\n                {props.matches.map(match => (\n                    <Match key={match.id}>\n                        <Link href=\"/match/[id]\" as={`/match/${match.id}`}>\n                            <ATag>\n                                <FranLogo src={`/logos/${getTeamLogo(match.a)}`} alt=\"img-franlogo\" />\n                                <TeamName>{match.a}</TeamName>\n                                <Meta>@</Meta>\n                                <TeamName>{match.h}</TeamName>\n                                <FranLogo src={`/logos/${getTeamLogo(match.h)}`} alt=\"img-franlogo\" />\n                            </ATag>\n                        </Link>\n                    </Match>\n                ))}\n            </MatchList>\n        </Layout>\n    );\n};\nSchedules.getInitialProps = async function() {\n    const data = SeasonSchedules;\n    // const searchDate = '20200212';\n\n    const date = new Date().toISOString();\n    const searchDate = date.substr(0, date.length - 14).replace(/\\-/g, '');\n\n    const matchesOnDate = Object.values(data).filter(entry => {\n        return entry.est.indexOf(searchDate) > -1;\n    });\n\n    // console.log('matchesOnDate:' + matchesOnDate[0].a);\n\n    return {\n        matches: matchesOnDate\n    };\n\n    // {\"id\": 2019020016, \"est\": \"20191004 14:00:00\", \"a\": \"CHI\", \"h\": \"PHI\"}\n};\nexport default Schedules;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AAcA;AADA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;;;;A","sourceRoot":""}