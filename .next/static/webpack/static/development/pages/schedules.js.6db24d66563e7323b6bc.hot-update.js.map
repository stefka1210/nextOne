{"version":3,"file":"static/webpack/static/development/pages/schedules.js.6db24d66563e7323b6bc.hot-update.js","sources":["webpack:///./components/Clock.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    font-size: 0.8rem;\n`;\n\nconst Time = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 700;\n`;\nconst Label = styled.div`\n    margin-right: 0.5em;\n    text-align: left;\n    font-size: 0.6rem;\n`;\nconst Value = styled.div`\n    text-align: right;\n`;\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date()\n        };\n    }\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n    tick() {\n        this.setState({\n            time: new Date()\n        });\n    }\n\n    render() {\n        const {time} = this.state;\n\n        const options = {\n            // month: '2-digit',\n            // day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n        };\n        const easternOptions = options;\n\n        const local = new Intl.DateTimeFormat('de-DE', options).format(time);\n        easternOptions.timeZone = 'America/New_York';\n        const eastern = new Intl.DateTimeFormat('de-DE', easternOptions).format(time);\n\n        return (\n            <Container>\n                <Time>\n                    <Label>LOC</Label>\n                    <Value>{local}</Value>\n                </Time>\n                <Time>\n                    <Label>EST</Label>\n                    <Value>{eastern}</Value>\n                </Time>\n            </Container>\n        );\n    }\n}\nexport default Clock;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA/CA;AACA;AAgDA;;;;A","sourceRoot":""}